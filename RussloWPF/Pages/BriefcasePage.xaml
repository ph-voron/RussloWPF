<Page x:Class="RussloWPF.Pages.BriefcasePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:RussloWPF.Pages"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="600"
      Loaded="Page_Loaded"
      Title="BriefcasePage">
    <Page.Resources>

        <!--Для реализации DataBinding посредством разметки, нужно указать шаблон отдельного элемента настраиваемого списка. 
        Динамический список сам устанавливает в качестве контекста данных визуальному элементу соответствующую ViewModel, поэтому
        можно использовать DataBinding для связи свойства View и его ViewModel. Так же Command берется именно из ViewModel-->
        <DataTemplate x:Key="ListItemTemplate">
            <Grid Style="{StaticResource BookListItemStyle}" 
                  Width="{StaticResource BookListItemWidth}" 
                  Height="{StaticResource BookListItemHeight}" 
                  Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="1" HorizontalAlignment="Left" Margin="5" Source="/Images/book_cover_template_1.jpg"/>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <!--Поле Text привязывается к полю Author во ViewModel-->
                        <TextBlock Grid.Row="0" Style="{StaticResource BookListItemHeader1}" Text="{Binding Path=Author}"></TextBlock>
                        <TextBlock Grid.Row="1" Style="{StaticResource BookListItemHeader2}" Text="{Binding Path=Title}"></TextBlock>
                        <TextBlock Grid.Row="2" Style="{StaticResource BookListItemHeader3}" Text="{Binding Path=Description}"></TextBlock>

                    </Grid>

                    <Image  Source="/Images/ic_check_black_48dp_1x.png" Width="30" Height="30" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10"></Image>

                </Grid>
                <!--Command вызывается именно из отдельной ViewModel с которой связан визуальный элемент-->
                <Button 
                    Command="{Binding DeleteItemCommand}"
                    CommandParameter="{Binding}"
                    Style="{StaticResource DeleteButtonStyle}"></Button>
            </Grid>
        </DataTemplate>

    </Page.Resources>
    <Grid>

        <!--Динамический список с поддержкой DataBinding через разметку.
        ItemContainerStyle - связывает с шаблоном визуального элемента
        VirtualizingStackPanel - включает виртуализацию эолементов в списке, то есть позволяет экономить память 
        путем повторного использования уже видимых визуальных элементов и не выделяет память под новые визуальные элементы.
        На ScrollChanged сидит функционал подгрузки элементов при прокрутке вниз.
        ПРИМЕЧАНИЕ: в данной реализации не работает виртаулизация, так как в списке выводится несколько колонок с переносом элементов по горизонтали
        по умолчанию список не умеет это оптимизировать.-->
        <ListBox x:Name="BooksList" 
                 Margin="5, 55, 5, 0"
                 Padding="5"
                 ItemContainerStyle="{StaticResource ContainerStyle}"
                 VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
                 ItemTemplate="{StaticResource ListItemTemplate}" 
                 BorderThickness="0"
                 ScrollViewer.ScrollChanged="BooksList_ScrollChanged"
                 SelectionChanged="BooksList_SelectionChanged"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.ItemsPanel>
                <!--Так можно изменить шаблон панели элементов-->
                <ItemsPanelTemplate>
                    <!--Добавляет WrapPanel, что позволяет распологать элементы по горизонтали с переносом на следующую строку-->
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            
        </ListBox>

        <!--Панель элементов поиска-->
        <Grid Background="White" VerticalAlignment="Top" Height="45" Margin="5">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect
                                ShadowDepth="4"
                                Direction="0"
                                Color="Black"
                                Opacity="0.5"
                                BlurRadius="20"/>    
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Style>
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                <TextBlock 
                    FontSize="20"
                    FontWeight="ExtraLight"
                    TextAlignment="Center" 
                    VerticalAlignment="Center" 
                    Margin="0, 0, 5, 0">
                    Поиск
                </TextBlock>
                <TextBox 
                    x:Name="SearchTextField"
                    BorderThickness="0, 0, 0, 2"
                    Width="450" FontSize="20" 
                    KeyUp="SearchTextField_KeyUp"></TextBox>
                <Button 
                    x:Name="SearchSubmitButton"
                    Background="White" 
                    BorderThickness="0" 
                    Margin="5,0,0,0" 
                    Click="SearchSubmitButton_Click">
                    <Image 
                        Width="30"
                        Height="30"
                        Source="/Images/ic_search_black_48dp_1x.png"></Image>
                </Button>
            </StackPanel>
        </Grid>

    </Grid>
</Page>
